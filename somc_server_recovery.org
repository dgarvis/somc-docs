#+title: SoMC: Social Minecraft Server Recovery
#+author: Dylan Garvis
#+date: <2023-09-07 Thu>

* Summary
This document will go over how to setup a Linux Server and configure it for running
SoMC Minecraft and then how to restore the data from backups.

* Setting Up the Linux Server
1. Download and Install [[https://ubuntu.com/][Ubuntu]] Server LTS.
2. Ensure that the system is up-to-date.
   #+begin_src bash
     sudo apt-get upgrade
     sudo apt-get update
   #+end_src
3. Install Software and Tools
   #+begin_src bash
     sudo apt-get install emacs htop ranger iotop vnstat \
	  ca-certificates curl gnupg git
     sudo systemctl enable vnstat
   #+end_src
4. Setup a User Account.

   I use my name for my account.
   #+begin_src bash
     useradd -m -s /bin/zsh dylan
     passwd dylan
   #+end_src

   Add the user to the sudo group
   #+begin_src bash
     usermod -aG sudo dylan
   #+end_src
5. Change to use the user from this point on
   #+begin_src bash
     su dylan
   #+end_src
6. (Optional) Allow sudo without password
   #+begin_src bash
     sudo chmod +x /etc/sudoers
     emacs /etc/sudoers

     # uncomment the line that looks like
     # # %sudo   ALL=(ALL:ALL) NOPASSWD: ALL

     sudo chmod -w /etc/sudoers
   #+end_src
7. Configure SSH
   1. Add you public key
      #+begin_src bash
	emacs ~/.ssh/authorized_keys
      #+end_src
   2. Edit SSHD to only accept public keys.
      #+begin_src bash
	sudo emacs /etc/ssh/sshd_config

	# enable PasswordAuthentication no
	# should set PermitRootLogin no

	sudo systemctl restart ssh
      #+end_src
8. Setup Docker
   #+begin_src bash
     sudo install-m0755 -d/etc/apt/keyrings
     curl -fsSLhttps://download.docker.com/linux/ubuntu/gpg \
	  | sudo gpg --dearmor-o/etc/apt/keyrings/docker.gpg
     sudo chmod a+r /etc/apt/keyrings/docker.gpg

     echo\"deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
       "$(./etc/os-release &&echo"$VERSION_CODENAME")" stable"| \sudo tee/etc/apt/sources.list.d/docker.list >/dev/null

     sudo apt-get update
     sudo apt-get install docker-ce docker-ce-cli containerd.io \
	  docker-buildx-plugin docker-compose-plugin docker-compose
   #+end_src

   Then also allow the non-root user to user docker and test.
   #+begin_src bash
     sudo usermod -aG docker dylan
     docker run hello-world
   #+end_src

* Setup Custom Docker Images
Our Minecraft server has a custom docker for running backups, the discord bot
to interact with the server, and a forked version of the Minecraft-exporter
image to enable support for bedrock players.

The images should be available on docker hub by login in as *dmgarvis* with an
access token.
#+begin_src bash
  docker login -u dmgarvis
#+end_src

Otherwise, each repo can be cloned from GitHub and then the docker image built.
#+begin_src bash
  cd;
  git clone git@github.com:dgarvis/somc-manager.git;
  cd somc-manager;
  docker build --no-cache -t dmgarvis/somc-manager:latest .;

  cd;
  git clone git@github.com:dgarvis/minecraft-exporter.git;
  cd minecraft-exporter;
  docker build --no-cache -t dmgarvis/minecraft_exporter:latest .;

  cd;
  git clone git@github.com:dgarvis/minecraft-backup.git;
  cd minecraft-backup;
  docker build --no-cache -t dmgarvis/minecraft-backup:latest .;
#+end_src

* Restore Data
Two types of backups are created, both of which are stored on [[https://www.rsync.net/][rsync.net]].
- Full System :: Includes all world files and configuration files.
  This is the primary backup needed for a restore. It is stored
  as an encrypted tar.xz.
- World Data :: Incremental backups of the world data.
  This is stored in the *somc* [[https://www.borgbackup.org/][Borg]] repo.

** Restore the General System
1. Download the latest full system backup
2. Decrypt and Extract the backup (key is in ProtonPass)
   #+beign_src bash
   openssl enc -aes-256-cbc -d -in ARCHIVE.tar.xz.enc -out backup.tar.xz
   tar xf backup.tar.xz
   #+end_src
3. From backup, restore the docker containers
   #+begin_src bash
     sudo cp backup/var/lib/docker/volumes/* /var/lib/docker/volumes/
   #+end_src
4. From backup, restore the minecraft config files
   #+begin_src bash
     sudo cp backup/srv/minecraft /srv
   #+end_src

** Restore the minecraft world data from the latest incremental backup.
1. Set some borg enviornment values to make the next set of commands easier.
   /(this makes an assumption that you have an SSH config file setup to access
   the rsync.net server as backup)/
   #+begin_src bash
     export BORG_REPO=backup:somc
     export BORG_PASSPHRASE=...
     export BROG_REMOTE_PATH=borg1
   #+end_src
2. Select the latest archive of the world
   #+begin_src bash
     archive=$(borg list --last 1 | cut -d' ' -f1)
   #+end_src
3. In a working directory download and extract the backup archive.
   #+begin_src bash
     mkdir /tmp/restore
     cd /tmp/restore
     borg extract ::$archive
   #+end_src
4. Now restore the world data
   #+begin_src bash
     sudo su
     cd /srv/minecraft/somc-data/
     rm -rf *
     mv /tmp/restore .
   #+end_src

* Starting the Minecraft Server
To start the minecraft server, you should just need to run the following commands.
#+begin_src bash
  cd /srv/minecraft
  docker-compose up -d
#+end_src

* Network Configuration.
Make sure to update any firewalls to allow the ports for the minecraft server, http,
and https. You may also need to update the SRV records in the name server if the
Minecraft server is running on a non-standard port.
